{
    "contents" : "options(width=160)\nrm(list=ls())\ncat(\"\\f\")\n\n## @knitr setPaths\n\npathDir <- getwd() # establish home directory\npathFiles <- file.path(pathDir,\"data/extract/RAND/spss\")\nlist.files(pathFiles) # inspect participating studies\n\n## @knitr import_raw_files\nfilePaths <- list.files(pathFiles, full.names=T, recursive=T, pattern=\"sav$\")\nfileNames <- basename(filePaths) # save only the last component\n\n\n# read SPSS files, convert to RDS, save in derived only run the first time on new computer\n#for(i in 1:length(filePaths)){\n#for(i in 1){\n  #filePath <- filePaths[[i]]\n  #fileName <- tail(strsplit(filePath, \"/|.sav\")[[1]], n=1)\n  #oneFile <- Hmisc::spss.get(filePath, use.value.labels = TRUE)\n  #saveRDS(oneFile, paste0(\"./data/derived/unshared/\", fileName, \".rds\")) # all raw data\n# }\n\n#collect all RDS in a list object\npathFilesRDS <- pathFiles <- file.path(pathDir,\"data/derived/unshared//\")\nfilePathsRDS <- list.files(pathFiles, full.names=T, recursive=T, pattern=\"rds$\")\nfileNamesRDSbase <- basename(filePathsRDS) # save only the last component\nfileNamesRDS <- gsub(\".rds\",\"\",fileNamesRDSbase) # remove extention from the filename\nlsRAND <- list() # create empty list to population\n\npsychosocial <- c(\"h04f1a\",\"h06f2b\",\"h08f2a\",\"h10f4a\",\"h12e1a\")\n#### Development ####\nds04 <- readRDS(\"./data/derived/unshared/RAND/h04f1a.rds\")\nds06 <- readRDS(\"./data/derived/unshared/RAND/h06f2b.rds\")\nds08 <- readRDS(\"./data/derived/unshared/RAND/h08f2a.rds\")\nds10 <- readRDS(\"./data/derived/unshared/RAND/h10f4a.rds\")\nds12 <- readRDS(\"./data/derived/unshared/RAND/h12e1a.rds\")\n\n# str(ds04)\n# dim(ds04)\n# \n# (ds <- ds04[,c(\"HHIDPN\",\"JA028\")])\n# str(ds)\n# head(ds)\n\n## @knitr define_lookup_function\nnames_labels <- function(ds0){\n    nl <- data.frame(matrix(NA, nrow=ncol(ds0), ncol=2))\n    names(nl) <- c(\"name\",\"label\")\n      for (i in seq_along(names(ds0))){\n        # i = 2\n        nl[i,\"name\"] <- attr(ds0[i], \"names\")\n          if(is.null(attr(ds0[[i]], \"label\")) ){\n          nl[i,\"label\"] <- NA}else{\n          nl[i,\"label\"] <- attr(ds0[,i], \"label\")  \n          }\n      }\n    return(nl)\n}\n\n\nnl04 <- names_labels(ds0=ds04)\nnl06 <- names_labels(ds0=ds06)\nnl08 <- names_labels(ds0=ds08)\nnl10 <- names_labels(ds0=ds10)\nnl12 <- names_labels(ds0=ds12)\n\n\nwrite.csv(nl04,\"./data/derived/items/nl04.csv\")\nwrite.csv(nl06,\"./data/derived/items/nl06.csv\")\nwrite.csv(nl08,\"./data/derived/items/nl08.csv\")\nwrite.csv(nl10,\"./data/derived/items/nl10.csv\")\nwrite.csv(nl12,\"./data/derived/items/nl12.csv\")\n\n\n#### Developmental script beyond this point down ####\n\n#1. Complete list of variables that have monolythic names (\"gender\")\n\n#for(i in 1:length(filePathsRDS)) {\n # lsRAND[[i]] <- readRDS(filePathsRDS[i])\n#}\n#names(lsRAND) <- fileNamesRDS\n\n#str(lsRAND)\n\n# lsRAND is too big. We need a filter to screen what files should go it. \n# See Issue 1:  https://github.com/IALSA/HRS/issues/1\n\n#Identify RAND file years with psychosocial variables\npsychosocial <- c(\"h04f1a\",\"h06f2b\",\"h08f2a\",\"h10f4a\",\"h12e1a\")\nlsPsychosocial <- list()\n\nfor(i in 1:length(psychosocial)){\n  lsPsychosocial[[i]]<- readRDS(paste0(pathFilesRDS, psychosocial[i],\".rds\"))\n}\n\nfiles <- c(\"h04f1a\",\"h06f2b\",\"h08f2a\",\"h10f4a\",\"h12e1a\")\nid <- rep(\"HHIDPN\", length(files))\nsex <- c(\"GENDER\", \"GENDER\", \"gender\", \"gender\", \"gender\")\nage <- c(\"JA019\", \"KA019\", \"LA019\", \"MA019\", \"NA019\") # J - wave indication, A - section name\n\n\n\n\n\n",
    "created" : 1449012129365.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "6739102",
    "id" : "98FEFD91",
    "lastKnownWriteTime" : 1447402274,
    "path" : "~/GitHub/HRS/scripts/data/0_import_raw.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}